name: React Native CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Permet le d√©clenchement manuel du workflow

jobs:
  install-and-test:
    name: Install and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: ESLint and TypeScript Check
        run: |
          npm run lint
          npm run typescript

  build-android:
    name: Build Android App
    needs: install-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true
          working-directory: android

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('android/build.gradle') }}
          restore-keys: gradle-${{ runner.os }}-

      - name: Make Gradlew Executable
        run: cd android && chmod +x ./gradlew

      - name: Build Android Release
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Upload Android APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release.apk

  build-ios:
    name: Build iOS App
    needs: install-and-test
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
          bundler-cache: true
          working-directory: ios

      - name: Install Cocoapods
        run: |
          cd ios
          pod install

      - name: Build iOS App
        run: |
          cd ios
          xcodebuild -workspace $(find . -name "*.xcworkspace" | head -n 1) \
            -scheme $(xcodebuild -list -json | jq -r '.project.schemes[0]') \
            -configuration Release \
            -destination 'generic/platform=iOS Simulator' \
            -sdk iphonesimulator \
            build CODE_SIGNING_ALLOWED=NO

  build-expo:
    name: Expo Build
    needs: install-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Setup Expo CLI
        run: npm install -g expo-cli eas-cli

      - name: Login to Expo
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: npx expo login --non-interactive -t $EXPO_TOKEN

      - name: Build Web Bundle
        run: npx expo export:web

      - name: Upload Web Build
        uses: actions/upload-artifact@v3
        with:
          name: expo-web-build
          path: web-build/

      - name: Submit to EAS Build
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          npx eas-cli build --platform all --non-interactive --no-wait
